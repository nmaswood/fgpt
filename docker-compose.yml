version: "3.8"
services:
  db:
    image: postgres:14.4-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fgpt
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 5
  db_migration:
    image: db_migration
    build: ./db
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/fgpt?sslmode=disable
  db_test_migration:
    image: db_migration
    build: ./db
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/fgpt-test?sslmode=disable
  tika:
    image: apache/tika:latest-full
    ports:
      - "9998:9998"
  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    ports:
      - "8085:8085"
    container_name: gcloud-pubsub_test_node
    entrypoint: gcloud beta emulators pubsub start --project fgpt --host-port 0.0.0.0:8085
    volumes:
      - "pubsub:/data"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 5s
      timeout: 10s
      retries: 3

  pubsub_config:
    image: alpine/curl
    restart: "no"
    depends_on:
      pubsub:
        condition: service_healthy
    links:
      - pubsub
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        curl -s -X PUT 'http://pubsub:8085/v1/projects/fgpt/topics/task_queue'
        curl -s -X PUT 'http://pubsub:8085/v1/projects/fgpt/subscriptions/task_subscription' -H 'Content-Type: application/json' --data '{"topic":"projects/fgpt/topics/task_queue","pushConfig":{"pushEndpoint":"http://host.docker.internal:8002"}}'
        echo "-Finished configuring pubsub"
volumes:
  db:
    driver: local
  pubsub:
    driver: local
